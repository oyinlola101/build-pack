#!/usr/bin/env bash

set -e  # Exit on first error
set -o pipefail  # Fail on first command in a pipeline
set -u  # Treat unset variables as an error

# Set variables
BUILD_DIR="${1:-/tmp/build}"
CACHE_DIR="${2:-/tmp/cache}"

# Ensure non-interactive installation
export DEBIAN_FRONTEND=noninteractive

echo "-----> Installing dependencies..."

# Install Golang
GO_VERSION="1.17.6"
GO_TAR="go$GO_VERSION.linux-amd64.tar.gz"
GO_URL="https://golang.org/dl/$GO_TAR"
echo "-----> Installing Go $GO_VERSION..."
curl -LO "$GO_URL"
tar -C "$BUILD_DIR" -xzf "$GO_TAR"
export PATH="$BUILD_DIR/go/bin:$PATH"
rm "$GO_TAR"

# Install Java (OpenJDK)
JDK_VERSION="11.0.11"
JDK_DIR="$BUILD_DIR/jdk-$JDK_VERSION"
JDK_URL="https://aka.ms/download-jdk/microsoft-jdk-11.0.11-linux-x64.tar.gz"

echo "-----> Installing Java (OpenJDK) $JDK_VERSION..."
curl -L -o jdk.tar.gz "$JDK_URL"

mkdir -p "$JDK_DIR"
tar -xzf jdk.tar.gz -C "$JDK_DIR" --strip-components=1 || { echo "Error extracting JDK"; exit 1; }

export JAVA_HOME="$JDK_DIR"
export PATH="$JAVA_HOME/bin:$PATH"
rm jdk.tar.gz


# Install Python
PYTHON_VERSION="3.8.10"
PYTHON_DIR="$BUILD_DIR/python"
echo "-----> Installing Python $PYTHON_VERSION..."
mkdir -p "$PYTHON_DIR"
curl -o "$PYTHON_DIR/python.tgz" "https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tgz"
tar -xzf "$PYTHON_DIR/python.tgz" -C "$PYTHON_DIR"
cd "$PYTHON_DIR/Python-$PYTHON_VERSION"
./configure --prefix="$PYTHON_DIR"
make -j "$(nproc)" && make install
export PATH="$PYTHON_DIR/bin:$PATH"
cd "$BUILD_DIR"
rm "$PYTHON_DIR/python.tgz"

# Set up application directory
echo "-----> Setting up application directory..."
mkdir -p "$BUILD_DIR/app"
rsync -a --exclude="$BUILD_DIR/app" . "$BUILD_DIR/app/"

# Verify application directory setup
echo "-----> Verifying application directory setup..."
ls -al "$BUILD_DIR/app"

echo "-----> Buildpack compilation complete"
