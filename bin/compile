#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

set -e

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
VENDOR_DIR="$BUILD_DIR/.heroku/vendor"

function topic() {
  echo "-----> $*"
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

# Create vendor directory
mkdir -p $VENDOR_DIR
mkdir -p $BUILD_DIR/.profile.d

topic "Installing build essentials from binary"
# Instead of apt-get, we'll download pre-compiled binaries
# or use the system's existing GCC

# Install Python from official source
topic "Installing Python"
PYTHON_VERSION="3.9.16"
PYTHON_URL="https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz"

curl -L $PYTHON_URL | tar xz -C $VENDOR_DIR
cd $VENDOR_DIR/Python-${PYTHON_VERSION}
./configure --prefix=$VENDOR_DIR/python
make -j$(nproc)
make install

# Install Java from binary
topic "Installing Java"
JDK_VERSION="11.0.12"
JDK_URL="https://github.com/adoptium/temurin11-binaries/releases/download/jdk-${JDK_VERSION}%2B7/OpenJDK11U-jdk_x64_linux_hotspot_${JDK_VERSION}_7.tar.gz"

curl -L $JDK_URL | tar xz -C $VENDOR_DIR
mv $VENDOR_DIR/jdk* $VENDOR_DIR/java

# Set up environment
cat << EOF > $BUILD_DIR/.profile.d/000_configure_env.sh
export PATH="\$HOME/.heroku/vendor/python/bin:\$HOME/.heroku/vendor/java/bin:\$PATH"
export JAVA_HOME="\$HOME/.heroku/vendor/java"
export PYTHONPATH="\$HOME"
export LD_LIBRARY_PATH="\$HOME/.heroku/vendor/python/lib:\$LD_LIBRARY_PATH"
EOF

# Install pip and any requirements
topic "Installing pip and dependencies"
$VENDOR_DIR/python/bin/python3 -m ensurepip
if [ -f $BUILD_DIR/requirements.txt ]; then
    $VENDOR_DIR/python/bin/pip3 install -r $BUILD_DIR/requirements.txt | indent
fi

# Clean up to reduce slug size
topic "Cleaning up"
rm -rf $VENDOR_DIR/Python-${PYTHON_VERSION}
find $VENDOR_DIR -type f -name '*.pyc' -delete
find $VENDOR_DIR -type d -name '__pycache__' -exec rm -rf {} +

topic "Installation Complete!"
topic "Python version: $($VENDOR_DIR/python/bin/python3 --version)"
topic "Java version: $($VENDOR_DIR/java/bin/java -version 2>&1 | head -n1)"
