#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

set -e

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

function topic() {
  echo "-----> $*"
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

# Store which versions we're installing
APT_CACHE_DIR="$CACHE_DIR/apt/cache"
APT_STATE_DIR="$CACHE_DIR/apt/state"
APT_SOURCELIST_DIR="$CACHE_DIR/apt/sources"   

mkdir -p "$APT_CACHE_DIR/archives/partial"
mkdir -p "$APT_STATE_DIR/lists/partial"
mkdir -p "$APT_SOURCELIST_DIR"

# Install basic build tools
topic "Installing build tools"
apt-get update
apt-get install -y build-essential gcc g++ make cmake | indent

# Install Python
topic "Installing Python"
PYTHON_VERSION="3.9.16"
apt-get install -y python3.9 python3.9-dev python3-pip python3.9-venv | indent

# Create and activate virtual environment
python3.9 -m venv $BUILD_DIR/.venv
source $BUILD_DIR/.venv/bin/activate

# Install Java
topic "Installing Java"
apt-get install -y openjdk-11-jdk | indent

# Set environment variables that will persist
mkdir -p $BUILD_DIR/.profile.d

cat << EOF > $BUILD_DIR/.profile.d/configure_env.sh
export PATH="\$HOME/.venv/bin:\$PATH"
export JAVA_HOME="/usr/lib/jvm/java-11-openjdk-amd64"
export PATH="\$JAVA_HOME/bin:\$PATH"
export PYTHONPATH="\$HOME"
EOF

# Install any Python dependencies if requirements.txt exists
if [ -f $BUILD_DIR/requirements.txt ]; then
    topic "Installing Python dependencies"
    pip install -r $BUILD_DIR/requirements.txt | indent
fi

# Clean up cache to reduce slug size
topic "Cleaning up"
apt-get clean
rm -rf $APT_CACHE_DIR/*
rm -rf $APT_STATE_DIR/*
rm -rf /var/lib/apt/lists/*.*

topic "Complete!"
