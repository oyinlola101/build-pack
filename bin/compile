#!/usr/bin/env bash

# Fail script on any error, undefined variable, or pipe failure
set -euo pipefail

# Default directories with documentation
BUILD_DIR="${1:-/tmp/build}"
CACHE_DIR="${2:-/tmp/cache}"
export DEBIAN_FRONTEND=noninteractive

# Logger function for consistent output
log() {
    echo "-----> $1"
}

# Error handler
error_handler() {
    local line_no=$1
    local error_code=$2
    log "Error on line ${line_no}: Command exited with status ${error_code}"
    exit 1
}
trap 'error_handler ${LINENO} $?' ERR

# Function to download and verify files
download_file() {
    local url=$1
    local output=$2
    local max_retries=3
    local retry_count=0
    
    while [ $retry_count -lt $max_retries ]; do
        if curl -L --fail -o "$output" "$url"; then
            return 0
        fi
        retry_count=$((retry_count + 1))
        log "Download failed, retrying ($retry_count/$max_retries)..."
        sleep 2
    done
    return 1
}

# Create necessary directories
mkdir -p "$BUILD_DIR" "$CACHE_DIR"
log "Installing dependencies in $BUILD_DIR..."

### Install Java (OpenJDK) ###
JDK_VERSION="11"
JDK_DIR="$BUILD_DIR/jdk"
JDK_URL="https://api.adoptium.net/v3/binary/latest/$JDK_VERSION/ga/linux/x64/jdk/hotspot/normal/eclipse"

log "Installing Java (OpenJDK) $JDK_VERSION..."
if ! download_file "$JDK_URL" "jdk.tar.gz"; then
    log "Failed to download JDK"
    exit 1
fi

mkdir -p "$JDK_DIR"
if ! tar -xzf jdk.tar.gz -C "$JDK_DIR" --strip-components=1; then
    log "Error extracting JDK"
    exit 1
fi

export JAVA_HOME="$JDK_DIR"
export PATH="$JAVA_HOME/bin:$PATH"
rm jdk.tar.gz

### Install Python ###
PYTHON_VERSION="3.8.10"
PYTHON_DIR="$BUILD_DIR/python"
PYTHON_CACHE_DIR="$CACHE_DIR/python"
log "Installing Python $PYTHON_VERSION..."

mkdir -p "$PYTHON_DIR" "$PYTHON_CACHE_DIR"
PYTHON_TAR="Python-$PYTHON_VERSION.tgz"
PYTHON_URL="https://www.python.org/ftp/python/$PYTHON_VERSION/$PYTHON_TAR"

if ! download_file "$PYTHON_URL" "$PYTHON_CACHE_DIR/$PYTHON_TAR"; then
    log "Failed to download Python"
    exit 1
fi

tar -xzf "$PYTHON_CACHE_DIR/$PYTHON_TAR" -C "$PYTHON_DIR"
cd "$PYTHON_DIR/Python-$PYTHON_VERSION"

# Configure with minimal features for smaller size
./configure \
    --prefix="$PYTHON_DIR" \
    --enable-shared \
    --with-ensurepip=install \
    --without-doc-strings \
    --without-pymalloc \
    --disable-test-modules \
    --disable-ipv6 \
    CFLAGS="-fPIC -O2 -pipe"

make -j "$(nproc)"
make install
cd "$BUILD_DIR"



### Verify installations ###
log "Installed Versions:"
if ! java -version 2>&1; then
    log "Warning: Java installation verification failed"
fi

if ! python3 --version; then
    log "Warning: Python installation verification failed"
fi

# Export environment variables
cat > "$BUILD_DIR/env.sh" << EOF
export JAVA_HOME="$JDK_DIR"
export PATH="$JAVA_HOME/bin:$PYTHON_DIR/bin:\$PATH"
export PYTHONPATH="$PYTHON_DIR/lib/python3.8/site-packages:\$PYTHONPATH"
EOF

log "Build complete in $BUILD_DIR"
log "Source env.sh to use the installed tools"
