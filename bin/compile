#!/usr/bin/env bash

# Set variables
BUILD_DIR=$1
CACHE_DIR=$2

# Ensure the script is run in non-interactive mode
export DEBIAN_FRONTEND=noninteractive

# Install dependencies without superuser privileges
echo "-----> Installing dependencies..."

# Install Node Version Manager (nvm)
export NVM_DIR="$BUILD_DIR/.nvm"
mkdir -p $NVM_DIR
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
export PATH="$NVM_DIR/versions/node/v16.13.0/bin:$PATH"
source "$NVM_DIR/nvm.sh"

# Install Node.js and Yarn
nvm install 16.13.0
nvm use 16.13.0
npm install -g npm@9.7.2 yarn

# Install additional dependencies
echo "-----> Installing additional dependencies..."

# Download and install Go (Golang)
GO_VERSION="1.17.6"
GO_TAR="go$GO_VERSION.linux-amd64.tar.gz"
GO_URL="https://golang.org/dl/$GO_TAR"
curl -LO "$GO_URL"
tar -C "$BUILD_DIR" -xzf "$GO_TAR"
export PATH="$BUILD_DIR/go/bin:$PATH"
rm "$GO_TAR"

# Install Python, Java, and other dependencies
PYTHON_VERSION="3.8.10"
PYTHON_DIR="$BUILD_DIR/python"
mkdir -p $PYTHON_DIR
curl -o $PYTHON_DIR/python.tgz https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tgz
tar -xzf $PYTHON_DIR/python.tgz -C $PYTHON_DIR
cd $PYTHON_DIR/Python-$PYTHON_VERSION
./configure --prefix=$PYTHON_DIR && make && make install
export PATH="$PYTHON_DIR/bin:$PATH:$PATH"
cd $BUILD_DIR

# Install Java (OpenJDK) and other dependencies using a workaround
echo "-----> Installing Java (OpenJDK) and other dependencies..."
echo "deb [trusted=yes] http://archive.ubuntu.com/ubuntu/ focal main universe" > /etc/apt/sources.list.d/focal.list
apt-get update -o Dir::Etc::sourcelist="sources.list.d/focal.list" -o Dir::Etc::sourceparts="-" -o APT::Get::List-Cleanup="0"
apt-get install -y \
  default-jre default-jdk \
  gcc g++ && \
rm -rf /var/lib/apt/lists/*

# Set up application directory
echo "-----> Setting up application directory..."
mkdir -p "$BUILD_DIR/app"
rsync -a --exclude="$BUILD_DIR/app" . "$BUILD_DIR/app/"

# Change to the application directory
cd "$BUILD_DIR/app"

# Install application dependencies using Yarn
echo "-----> Installing application dependencies..."
yarn install

# Clean up unnecessary files
echo "-----> Cleaning up unnecessary files..."
rm -rf "$BUILD_DIR/go/pkg"
rm -rf "$BUILD_DIR/python/Python-$PYTHON_VERSION"
rm -rf "$BUILD_DIR/.nvm/.cache"

# Output a success message
echo "-----> Buildpack compilation complete"

# Output a success message
echo "-----> Oyin compilation complete"
